
def vacuum_world():
    # Initialize goal_state: '0' means clean, '1' means dirty
    goal_state = {'A': '0', 'B': '0'}
    cost = 0
   
    # Input: Get the current location of the vacuum cleaner
    location_input = input("Enter Location of Vacuum (A or B): ")
   
    # Input: Get the status of the current location (clean or dirty)
    status_input = input(f"Enter status of {location_input} (0 for clean, 1 for dirty): ")
   
    # Input: Get the status of the other location
    location_input_complement = 'B' if location_input == 'A' else 'A'
    status_input_complement = input(f"Enter status of {location_input_complement} (0 for clean, 1 for dirty): ")
   
    print("Initial Location Condition: ", goal_state)

    # If the vacuum cleaner is at location A
    if location_input == 'A':
        # Location A is dirty
        if status_input == '1':
            print("Vacuum is placed in Location A")
            print("Location A is Dirty.")
            goal_state['A'] = '0'  # Clean location A
            cost += 1  # Increment cost for cleaning
            print("Cost for CLEANING A:", cost)
            print("Location A has been Cleaned.")
       
        # If location B is dirty
        if status_input_complement == '1':
            print("Location B is Dirty.")
            print("Moving right to Location B.")
            cost += 1  # Increment cost for movement
            print("Cost for moving RIGHT:", cost)
            goal_state['B'] = '0'  # Clean location B
            cost += 1  # Increment cost for cleaning
            print("Cost for CLEANING B:", cost)
            print("Location B has been Cleaned.")
        else:
            print("Location B is already clean. No action.")
   
    # If the vacuum cleaner is at location B
    elif location_input == 'B':
        if status_input == '1':
            print("Vacuum is placed in Location B")
            print("Location B is Dirty.")
            goal_state['B'] = '0'  # Clean location B
            cost += 1  # Increment cost for cleaning
            print("Cost for CLEANING B:", cost)
            print("Location B has been Cleaned.")
       
        # If location A is dirty
        if status_input_complement == '1':
            print("Location A is Dirty.")
            print("Moving left to Location A.")
            cost += 1  # Increment cost for movement
            print("Cost for moving LEFT:", cost)
            goal_state['A'] = '0'  # Clean location A
            cost += 1  # Increment cost for cleaning
            print("Cost for CLEANING A:", cost)
            print("Location A has been Cleaned.")
        else:
            print("Location A is already clean. No action.")
   
    # Output the final goal state and the total cost
    print("\nFinal Goal State: ", goal_state)
    print("Total Cost (cleaning and moving):", cost)

# Call the vacuum_world function to start the simulation
vacuum_world()
